#!/usr/bin/env python

""" convert CIDR notation to wildcard mask """

print('Enter IPs with Wildcard Masks to convert to CIDR (oner per line):')
ip_addr = '\n'.join(iter(raw_input, ''))
ip_addr = ip_addr.split("\n")
for addr in ip_addr:
    addr = addr.replace('0.0.0.0', '255.255.255.255')
    addr = addr.replace('0.0.0.1', '255.255.255.254')
    addr = addr.replace('0.0.0.3', '255.255.255.252')
    addr = addr.replace('0.0.0.7', '255.255.255.248')
    addr = addr.replace('0.0.0.15', '255.255.255.240')
    addr = addr.replace('0.0.0.31', '255.255.255.224')
    addr = addr.replace('0.0.0.63', '255.255.255.192')
    addr = addr.replace('0.0.0.127', '255.255.255.128')
    addr = addr.replace('0.0.0.255', '255.255.255.0')
    addr = addr.replace('0.0.1.255', '255.255.254.0')
    addr = addr.replace('0.0.3.255', '255.255.252.0')
    addr = addr.replace('0.0.7.255', '255.255.248.0')
    addr = addr.replace('0.0.15.255', '255.255.240.0')
    addr = addr.replace('0.0.31.255', '255.255.224.0')
    addr = addr.replace('0.0.63.255', '255.255.192.0')
    addr = addr.replace('0.0.127.255', '255.255.128.0')
    addr = addr.replace('0.0.255.255', '255.255.0.0')
    addr = addr.replace('0.1.255.255', '255.254.0.0')
    addr = addr.replace('0.3.255.255', '255.252.0.0')
    addr = addr.replace('0.7.255.255', '255.248.0.0')
    addr = addr.replace('0.15.255.255', '255.240.0.0')
    addr = addr.replace('0.31.255.255', '255.224.0.0')
    addr = addr.replace('0.63.255.255', '255.192.0.0')
    addr = addr.replace('0.127.255.255', '255.128.0.0')
    addr = addr.replace('0.255.255.255', '255.0.0.0')
    addr = addr.replace('1.255.255.255', '254.0.0.0')
    addr = addr.replace('3.255.255.255', '252.0.0.0')
    addr = addr.replace('7.255.255.255', '248.0.0.0')
    addr = addr.replace('15.255.255.255', '240.0.0.0')
    addr = addr.replace('31.255.255.255', '224.0.0.0')
    addr = addr.replace('63.255.255.255', '192.0.0.0')
    addr = addr.replace('127.255.255.255', '128.0.0.0')
    addr = addr.replace('255.255.255.255', '0.0.0.0')
    print addr.rstrip()
